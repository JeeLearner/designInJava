一、享元模式介绍

享元模式（FlyWeight）：运用共享技术有效的支持大量细粒度对象的重用。
    Flyweight在拳击比赛中指最轻量级，即“蝇量级”或“雨量级”，这里选择使用“享元模式”的意译，是因为这样更能反映模式的用意。
    享元模式是对象的结构模式。享元模式以共享的方式高效地支持大量的细粒度对象。

享元对象能做到共享的关键就是区分了内部状态和外部状态。
    内部状态：可以共享，不会随环境变化而变化
    外部状态：不可以共享，会随环境变化而变化
    享元对象的外部状态必须由客户端保存，并在享元对象被创建之后，在需要使用的时候再传入到享元对象内部。外部状态不可以影响享元对象的内部状态，它们是相互独立的。


分类：
    1）单纯享元模式
        在单纯的享元模式中，所有的享元对象都是可以共享的。

        角色：
            FlyweightFactory（享元工厂类）：创建并管理享元对象，享元池一般设计成键值对
            FlyWeight（抽象享元类）：通常是一个接口或者抽象类，声明公共方法，这些方法可以向外界提供对象的内部状态，设置外部状态。
            ConcreteFlyWeight（具体享元类）：为内部状态提供成员变量进行存储
            UnsharedConcreteFlyWeight（非共享享元类）：不能被共享的子类可以设计为非共享享元类

    2）复合享元模式
        在单纯享元模式中，所有的享元对象都是单纯享元对象，也就是说都是可以直接共享的。
        还有一种较为复杂的情况，将一些单纯享元使用合成模式加以复合，形成复合享元对象。
        这样的复合享元对象本身不能共享，但是它们可以分解成单纯享元对象，而后者则可以共享。

　　    角色：
        　　●抽象享元(Flyweight)角色 ：给出一个抽象接口，以规定出所有具体享元角色需要实现的方法。
        　　●具体享元(ConcreteFlyweight)角色：实现抽象享元角色所规定出的接口。如果有内蕴状态的话，必须负责为内蕴状态提供存储空间。
        　　●复合享元(ConcreteCompositeFlyweight)角色 ：复合享元角色所代表的对象是不可以共享的，但是一个复合享元对象可以分解成为多个本身是单纯享元对象的组合。复合享元角色又称作不可共享的享元对象。
        　　●享元工厂(FlyweightFactory)角色 ：本角 色负责创建和管理享元角色。本角色必须保证享元对象可以被系统适当地共享。当一个客户端对象调用一个享元对象的时候，享元工厂角色会检查系统中是否已经有 一个符合要求的享元对象。如果已经有了，享元工厂角色就应当提供这个已有的享元对象；如果系统中没有一个适当的享元对象的话，享元工厂角色就应当创建一个 合适的享元对象。

三、享元模式应用场景
    如果项目中有很多完全相同或相似的对象，则可以使用享元模式，节省内存。
    享元模式开发中应用场景：
        比如线程池，数据库连接池，这些都利用享元模式共享了部分属性，在池中操作。
        String类的设计也是享元模式
            String对象是final类型，对象一旦创建就不可改变。
            在JAVA中字符串常量都是存在常量池中的，JAVA会确保一个字符串常量在常量池中只有一个拷贝。
            这样的设计避免了在创建N多相同对象时所产生的不必要的大量的资源消耗。
                String a = "ac";
                String b = "ac";
                System.out.println(a == b); //true

优点：
    1.极大的减少内存中对象的数量
    2.相同或相似对象内存中只存在一份，极大的节约资源，提高系统性能
    3.外部状态相对独立，不影响内部状态

缺点：
    1.模式较复杂，使程序逻辑复杂化
    2.为了节省内存，共享了内部状态，分离出外部状态，而读取外部状态使运行时间变长。



demo1_1    单纯享元模式
    围棋中的享元模式。在围棋中，所有的白色或黑色的（形状、大小，颜色都一样）只是位置不同，那像这样的情况，可以使用享元模式。
    把颜色、形状、大小给共享出来（内部状态）。位置不共享（外部状态）

demo1_2   符合享元模式
    　　从运行结果可以看出，
            一个复合享元对象的所有单纯享元对象元素的外部状态都是与复合享元对象的外部状态相等的。即外部状态都等于 棋子位置：(10,10)。
            一个复合享元对象所含有的单纯享元对象的内部状态一般是不相等的。即内部状态分别为  "黑"、"白"。
            复合享元对象是不能共享的。即使用相同的对象colors通过工厂分别两次创建出的对象不是同一个对象。
            单纯享元对象是可以共享的。即使用相同的对象color通过工厂分别两次创建出的对象是同一个对象。